---
title: "Split Packed Bubble Plot"
author: "Jorge Bris Moreno"
format:
  html:
    embed-resources: true
    toc: true
editor_options:
  chunk_output_type: console
execute:
  echo: false
--- 

```{r, echo=FALSE, results='asis', runtime="js"}
# Calling highcharts
cat('
<script src="https://code.highcharts.com/maps/highmaps.js"></script>
<script src="https://code.highcharts.com/maps/modules/exporting.js"></script>
<script src="https://code.highcharts.com/maps/modules/accessibility.js"></script>
')
```

```{r, message=FALSE, warning=FALSE, eval=FALSE}
# Load necessary libraries
library(dplyr)
library(jsonlite)

# Read data from CSV
data <- read.csv("cleaned_data/sorted_merged_df_cleaned.csv")
```

```{r, message=FALSE, warning=FALSE, eval=FALSE}
head(data)
```

```{r, message=FALSE, warning=FALSE, eval=FALSE}
# Load library to read xlsx files
library(readxl)

df1 <- read_xlsx("parallel_coordinates_plot/Region_Country.xlsx")

# Change column name A to Country.Name and B to Country.Code
colnames(df1) <- c("Country.Name", "Country.Code")

# keep only Country.Name and Country.Code columns
df1 <- df1[, c("Country.Name", "Country.Code")]
head(df1)
```

```{r, message=FALSE, warning=FALSE, eval=FALSE}
# Defining countries to exclude
exclude_countries <- c("Arab World", "East Asia & Pacific", "East Asia & Pacific (excluding high income)", "Euro area", 
                       "Europe & Central Asia", "Europe & Central Asia (excluding high income)", "European Union", 
                       "Heavily indebted poor countries (HIPC)", "High income", "Latin America & Caribbean", 
                       "Latin America & Caribbean (excluding high income)", "Low & middle income", "Low income", 
                       "Lower middle income", "Middle East & North Africa", "Middle East & North Africa (excluding high income)", 
                       "Middle income", "North America", "OECD members", "South Asia", "Sub-Saharan Africa", 
                       "Sub-Saharan Africa (excluding high income)", "Upper middle income", "World", 
                       "Least developed countries: UN classification")

# Filtering the data
filtered_data <- data %>% 
  filter(!Country.Name %in% exclude_countries) %>%
  select(Country.Name, numeric_region)

# Assuming df1 is already loaded and has a column named Country.Name
merged_data <- merge(filtered_data, df1, by = "Country.Name")

# Removing the Country.Name column
final_data <- merged_data %>% select(-Country.Name)

# Renaming columns
final_data <- rename(final_data, name = Country.Code, value = numeric_region)

# Remove duplicates in name column
final_data <- final_data[!duplicated(final_data$name), ]

# Saving the final data frame to JSON
write_json(final_data, "Jorge/data/regions.json", pretty = TRUE)
```

```{ojs}
(async () => {
    // Fetch the topology data for the world map
    let topology = await fetch('https://code.highcharts.com/mapdata/custom/world.topo.json')
        .then(response => response.json());

    // Data appears to be a constant structure so it can be declared with 'const'
    let regions = [
  {
    "value": 1,
    "name": "AFG"
  },
  {
    "value": 2,
    "name": "ALB"
  },
  {
    "value": 2,
    "name": "AUT"
  },
  {
    "value": 2,
    "name": "AZE"
  },
  {
    "value": 2,
    "name": "BLR"
  },
  {
    "value": 2,
    "name": "BEL"
  },
  {
    "value": 3,
    "name": "BLZ"
  },
  {
    "value": 1,
    "name": "BTN"
  },
  {
    "value": 4,
    "name": "BRN"
  },
  {
    "value": 2,
    "name": "BGR"
  },
  {
    "value": 5,
    "name": "BFA"
  },
  {
    "value": 5,
    "name": "BDI"
  },
  {
    "value": 5,
    "name": "CPV"
  },
  {
    "value": 3,
    "name": "CHL"
  },
  {
    "value": 4,
    "name": "CHN"
  },
  {
    "value": 3,
    "name": "COL"
  },
  {
    "value": 3,
    "name": "CRI"
  },
  {
    "value": 2,
    "name": "CYP"
  },
  {
    "value": 2,
    "name": "DNK"
  },
  {
    "value": 3,
    "name": "DOM"
  },
  {
    "value": 3,
    "name": "ECU"
  },
  {
    "value": 6,
    "name": "EGY"
  },
  {
    "value": 3,
    "name": "SLV"
  },
  {
    "value": 2,
    "name": "FIN"
  },
  {
    "value": 2,
    "name": "FRA"
  },
  {
    "value": 2,
    "name": "DEU"
  },
  {
    "value": 3,
    "name": "GTM"
  },
  {
    "value": 3,
    "name": "HND"
  },
  {
    "value": 2,
    "name": "HUN"
  },
  {
    "value": 4,
    "name": "IDN"
  },
  {
    "value": 6,
    "name": "IRN"
  },
  {
    "value": 6,
    "name": "ISR"
  },
  {
    "value": 2,
    "name": "KAZ"
  },
  {
    "value": 6,
    "name": "KWT"
  },
  {
    "value": 4,
    "name": "LAO"
  },
  {
    "value": 2,
    "name": "LVA"
  },
  {
    "value": 5,
    "name": "LSO"
  },
  {
    "value": 2,
    "name": "LTU"
  },
  {
    "value": 5,
    "name": "MWI"
  },
  {
    "value": 6,
    "name": "MLT"
  },
  {
    "value": 5,
    "name": "MRT"
  },
  {
    "value": 5,
    "name": "MUS"
  },
  {
    "value": 3,
    "name": "MEX"
  },
  {
    "value": 2,
    "name": "MDA"
  },
  {
    "value": 5,
    "name": "MOZ"
  },
  {
    "value": 1,
    "name": "NPL"
  },
  {
    "value": 4,
    "name": "NZL"
  },
  {
    "value": 5,
    "name": "NER"
  },
  {
    "value": 2,
    "name": "NOR"
  },
  {
    "value": 1,
    "name": "PAK"
  },
  {
    "value": 3,
    "name": "PER"
  },
  {
    "value": 2,
    "name": "PRT"
  },
  {
    "value": 5,
    "name": "RWA"
  },
  {
    "value": 2,
    "name": "SRB"
  },
  {
    "value": 5,
    "name": "SYC"
  },
  {
    "value": 2,
    "name": "SVK"
  },
  {
    "value": 2,
    "name": "SVN"
  },
  {
    "value": 5,
    "name": "ZAF"
  },
  {
    "value": 2,
    "name": "ESP"
  },
  {
    "value": 3,
    "name": "KNA"
  },
  {
    "value": 3,
    "name": "VCT"
  },
  {
    "value": 2,
    "name": "SWE"
  },
  {
    "value": 2,
    "name": "CHE"
  },
  {
    "value": 4,
    "name": "TLS"
  },
  {
    "value": 4,
    "name": "TON"
  },
  {
    "value": 2,
    "name": "UKR"
  },
  {
    "value": 2,
    "name": "GBR"
  },
  {
    "value": 7,
    "name": "USA"
  },
  {
    "value": 6,
    "name": "PSE"
  }
];

    Highcharts.mapChart('container1', {
        chart: {
            map: topology
        },
        title: {
            text: 'Gross Enrolment Ratio in Secondary Education (Female)',
            align: 'left'
        },
        credits: {
            href: '',
            text: ''
        },
        mapNavigation: {
            enabled: true,
            buttonOptions: {
                verticalAlign: 'bottom'
            }
        },
        colorAxis: {
    dataClasses: [{
        from: 1,
        to: 2,
        color: '#3d6469',
        name: 'South Asia'
    }, {
        from: 2,
        to: 3,
        color: '#ffa205',
        name: 'Europe & Central Asia'
    }, {
        from: 3,
        to: 4,
        color: '#ff4500',
        name: 'Middle East & North Africa'
    }, {
        from: 4,
        to: 5,
        color: '#08030a',
        name: 'East Asia & Pacific'
    }, {
        from: 5,
        to: 6,
color: '#feeece',
        name: 'Sub-Saharan Africa'
    }, {
        from: 6,
        to: 7,
        color: '#d40637',
        name: 'Latin America & Caribbean'
    }, {
        from: 7,
        to: 8,
        color: '#5f0922',
        name: 'North America'
    }]
        },
        series: [{
            name: 'Gross Enrolment Ratio',
            joinBy: ['iso-a3', 'name'],
            data: regions,
            dataLabels: {
                enabled: true,
                format: '{point.name}: {point.value}',
                style: {
                    fontWeight: 'normal'
                }
            }
        }]
    });
})();
```

<figure>
  <div id="container1" style="width: 100%; height: 500px;"></div>
  <figcaption>These plots show the Gross Enrollment Ratio per education level around the world. Only the values collected by the World Bank are being displayed. Countries that did not share information do not display any values. Note that because of the way data is collected,  small discrepancies in the reported age of children may occasionally cause net enrollment rates to exceed 100 percent by the World Bank. However, this allows us to visualize high vs low enrollment and contrast regions of interest.</figcaption>
</figure>