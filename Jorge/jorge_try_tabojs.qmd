---
title: "Split Packed Bubble Plot"
author: "Jorge Bris Moreno"
format:
    html:
        embed-resources: true
        code-fold: true
        toc: true
---

```{r, echo=FALSE, results='asis', runtime="js"}
# Calling highcharts
cat('
<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/highcharts-more.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>
<script src="https://code.highcharts.com/modules/export-data.js"></script>
<script src="https://code.highcharts.com/modules/accessibility.js"></script>
')
```

```{ojs, message=FALSE, warning=FALSE, echo = FALSE, return = FALSE}
// Define the initial dataset
initialData = [
  {"Country Name":"Arab World","Indicator":"lower secondary","Value":81.054},
  {"Country Name":"Arab World","Indicator":"post-secondary non-tertiary","Value":"NA"},
  {"Country Name":"Arab World","Indicator":"pre-primary","Value":25.3707},
  {"Country Name":"Arab World","Indicator":"primary","Value":93.608},
  {"Country Name":"Arab World","Indicator":"secondary","Value":67.9689},
  {"Country Name":"Arab World","Indicator":"tertiary","Value":28.768},
  {"Country Name":"Arab World","Indicator":"upper secondary","Value":54.5065},
  {"Country Name":"East Asia & Pacific","Indicator":"lower secondary","Value":96.6641},
  {"Country Name":"East Asia & Pacific","Indicator":"post-secondary non-tertiary","Value":"NA"},
  {"Country Name":"East Asia & Pacific","Indicator":"pre-primary","Value":76.0034},
  {"Country Name":"East Asia & Pacific","Indicator":"primary","Value":104.9668},
  {"Country Name":"East Asia & Pacific","Indicator":"secondary","Value":88.3206},
  {"Country Name":"East Asia & Pacific","Indicator":"tertiary","Value":41.4262},
  {"Country Name":"East Asia & Pacific","Indicator":"upper secondary","Value":79.7367},
  {"Country Name":"Euro area","Indicator":"lower secondary","Value":108.7706},
  {"Country Name":"Euro area","Indicator":"post-secondary non-tertiary","Value":"NA"},
  {"Country Name":"Euro area","Indicator":"pre-primary","Value":102.3132},
  {"Country Name":"Euro area","Indicator":"primary","Value":103.4798},
  {"Country Name":"Euro area","Indicator":"secondary","Value":110.7075},
  {"Country Name":"Euro area","Indicator":"tertiary","Value":76.299},
  {"Country Name":"Euro area","Indicator":"upper secondary","Value":112.9169},
  {"Country Name":"Europe & Central Asia","Indicator":"lower secondary","Value":103.7713},
  {"Country Name":"Europe & Central Asia","Indicator":"post-secondary non-tertiary","Value":"NA"},
  {"Country Name":"Europe & Central Asia","Indicator":"pre-primary","Value":74.2163},
  {"Country Name":"Europe & Central Asia","Indicator":"primary","Value":103.1583},
  {"Country Name":"Europe & Central Asia","Indicator":"secondary","Value":105.389},
  {"Country Name":"Europe & Central Asia","Indicator":"tertiary","Value":69.8713},
  {"Country Name":"Europe & Central Asia","Indicator":"upper secondary","Value":107.4027},
  {"Country Name":"Heavily indebted poor countries (HIPC)","Indicator":"lower secondary","Value":"NA"},
  {"Country Name":"Heavily indebted poor countries (HIPC)","Indicator":"post-secondary non-tertiary","Value":18.0427},
  {"Country Name":"Heavily indebted poor countries (HIPC)","Indicator":"pre-primary","Value":98.0805},
  {"Country Name":"Heavily indebted poor countries (HIPC)","Indicator":"primary","Value":35.621},
  {"Country Name":"Heavily indebted poor countries (HIPC)","Indicator":"secondary","Value":6.233},
  {"Country Name":"Heavily indebted poor countries (HIPC)","Indicator":"tertiary","Value":24.4659},
  {"Country Name":"Heavily indebted poor countries (HIPC)","Indicator":"upper secondary","Value":108.0586},
  {"Country Name":"Latin America & Caribbean (excluding high income)","Indicator":"lower secondary","Value":"NA"},
  {"Country Name":"Latin America & Caribbean(excluding high income)","Indicator":"post-secondary non-tertiary","Value":72.4493},
  {"Country Name":"Latin America & Caribbean (excluding high income)","Indicator":"pre-primary","Value":107.3809},
  {"Country Name":"Latin America & Caribbean (excluding high income)","Indicator":"primary","Value":97.1722},
  {"Country Name":"Latin America & Caribbean (excluding high income)","Indicator":"secondary","Value":48.967},
  {"Country Name":"Latin America & Caribbean (excluding high income)","Indicator":"tertiary","Value":84.4792},
  {"Country Name":"Latin America & Caribbean (excluding high income)","Indicator":"upper secondary","Value":88.4424},
  {"Country Name":"Middle East & North Africa","Indicator":"lower secondary","Value":"NA"},
  {"Country Name":"Middle East & North Africa","Indicator":"post-secondary non-tertiary","Value":29.5462},
  {"Country Name":"Middle East & North Africa","Indicator":"pre-primary","Value":103.047},
  {"Country Name":"Middle East & North Africa","Indicator":"primary","Value":76.9069},
  {"Country Name":"Middle East & North Africa","Indicator":"secondary","Value":38.2514},
  {"Country Name":"Middle East & North Africa","Indicator":"tertiary","Value":65.6759},
  {"Country Name":"Middle East & North Africa","Indicator":"upper secondary","Value":86.992},
  {"Country Name":"Middle East & North Africa (excluding high income)","Indicator":"lower secondary","Value":"NA"},
  {"Country Name":"Middle East & North Africa (excluding high income)","Indicator":"post-secondary non-tertiary","Value":26.8679},
  {"Country Name":"Middle East & North Africa (excluding high income)","Indicator":"pre-primary","Value":102.4904},
  {"Country Name":"Middle East & North Africa (excluding high income)","Indicator":"primary","Value":74.3971},
  {"Country Name":"Middle East & North Africa (excluding high income)","Indicator":"secondary","Value":36.1012},
  {"Country Name":"Middle East & North Africa (excluding high income)","Indicator":"tertiary","Value":62.3747},
  {"Country Name":"Middle East & North Africa (excluding high income)","Indicator":"upper secondary","Value":107.3207},
  {"Country Name":"OECD members","Indicator":"lower secondary","Value":79.3329},
  {"Country Name":"OECD members","Indicator":"post-secondary non-tertiary","Value":"NA"},
  {"Country Name":"OECD members","Indicator":"pre-primary","Value":102.2592},
  {"Country Name":"OECD members","Indicator":"primary","Value":104.3177},
  {"Country Name":"OECD members","Indicator":"secondary","Value":75.5335},
  {"Country Name":"OECD members","Indicator":"tertiary","Value":101.3419},
  {"Country Name":"OECD members","Indicator":"upper secondary","Value":46.1386},
  {"Country Name":"Sub-Saharan Africa (excluding high income)","Indicator":"lower secondary","Value":"NA"},
  {"Country Name":"Sub-Saharan Africa (excluding high income)","Indicator":"post-secondary non-tertiary","Value":22.0271},
  {"Country Name":"Sub-Saharan Africa (excluding high income)","Indicator":"pre-primary","Value":94.7689},
  {"Country Name":"Sub-Saharan Africa (excluding high income)","Indicator":"primary","Value":39.5373},
  {"Country Name":"Sub-Saharan Africa (excluding high income)","Indicator":"secondary","Value":7.2426},
  {"Country Name":"Sub-Saharan Africa (excluding high income)","Indicator":"tertiary","Value":31.7493},
  {"Country Name":"Sub-Saharan Africa (excluding high income)","Indicator":"upper secondary","Value":108.0586}
];

// Filter and parse the dataset to remove "NA" values and convert "Value" to float
parsedData = initialData.filter(d => d.Value !== "NA").map(d => ({
  ...d,
  Value: parseFloat(d.Value)
}));

// Reduce the data to group it by "Country Name" and accumulate the indicators and values
seriesData = parsedData.reduce((acc, { "Country Name": countryName, Indicator, Value }) => {
  let group = acc.find(g => g.name === countryName);
  if (!group) {
    group = { name: countryName, data: [] };
    acc.push(group);
  }
  group.data.push({ name: Indicator, value: Value });
  return acc;
}, []);
```

```{ojs}
hex_colors = [
    "#3d6469", "#af882e", "#ff8f04", "#ff5901", "#9c2b04", "#0b060c", "#9c9080", "#f5bdae","#dc3455", "#a4072e", "#5f0922"
]

// Filter data for primary indicators
primaryData = parsedData.filter(d => ["primary", "pre-primary", "post-secondary non-tertiary"].includes(d.Indicator));

// Filter data for secondary indicators
secondaryData = parsedData.filter(d => ["lower secondary", "upper secondary", "secondary"].includes(d.Indicator));

// Filter data for tertiary indicators
tertiaryData = parsedData.filter(d => ["tertiary"].includes(d.Indicator));

// Reduce data to group by "Country Name" and accumulate indicators and values
primarySeriesData = primaryData.reduce((acc, { "Country Name": countryName, Indicator, Value }) => {
  let group = acc.find(g => g.name === countryName);
  if (!group) {
    group = { name: countryName, data: [] };
    acc.push(group);
  }
  group.data.push({ name: Indicator, value: Value });
  return acc;
}, []);

secondarySeriesData = secondaryData.reduce((acc, { "Country Name": countryName, Indicator, Value }) => {
  let group = acc.find(g => g.name === countryName);
  if (!group) {
    group = { name: countryName, data: [] };
    acc.push(group);
  }
  group.data.push({ name: Indicator, value: Value });
  return acc;
}, []);

tertiarySeriesData = tertiaryData.reduce((acc, { "Country Name": countryName, Indicator, Value }) => {
  let group = acc.find(g => g.name === countryName);
  if (!group) {
    group = { name: countryName, data: [] };
    acc.push(group);
  }
  group.data.push({ name: Indicator, value: Value });
  return acc;
}, []);

// Define the chart rendering function for each plot
function renderPrimaryChart() {
  Highcharts.chart('primary-container', {
    chart: {
      type: 'packedbubble',
      height: '100%'
    },
    title: {
      text: 'Female Gross Enrollment Ratios by Region (2014) - Primary'
    },
    tooltip: {
      useHTML: true,
      pointFormat: '<b>{point.name}:</b> {point.value}%'
    },
    plotOptions: {
      packedbubble: {
        minSize: '10%',
        maxSize: '100%',
        zMin: 0,
        zMax: 400,
        layoutAlgorithm: {
          gravitationalConstant: 0.05,
          splitSeries: true,
          seriesInteraction: false,
          dragBetweenSeries: true,
          parentNodeLimit: true
        },
        dataLabels: {
          enabled: true,
          format: '{point.name}',
          style: {
            color: 'black',
            textOutline: 'none',
            fontWeight: 'normal'
          }
        }
      }
    },
    series: primarySeriesData.map((series, index) => ({
     ...series,
      color: hex_colors[index % hex_colors.length]
    }))
  });
}

function renderSecondaryChart() {
  Highcharts.chart('secondary-container', {
    chart: {
      type: 'packedbubble',
      height: '100%'
    },
    title: {
      text: 'Female Gross Enrollment Ratios by Region (2014) - Secondary'
    },
    tooltip: {
      useHTML: true,
      pointFormat: '<b>{point.name}:</b> {point.value}%'
    },
    plotOptions: {
      packedbubble: {
        minSize: '10%',
        maxSize: '100%',
        zMin: 0,
        zMax: 400,
        layoutAlgorithm: {
          gravitationalConstant: 0.05,
          splitSeries: true,
          seriesInteraction: false,
          dragBetweenSeries: true,
          parentNodeLimit: true
        },
        dataLabels: {
          enabled: true,
          format: '{point.name}',
          style: {
            color: 'black',
            textOutline: 'none',
            fontWeight: 'normal'
          }
        }
      }
    },
    series: secondarySeriesData.map((series, index) => ({
     ...series,
      color: hex_colors[index % hex_colors.length]
    }))
  });
}

function renderTertiaryChart() {
  Highcharts.chart('tertiary-container', {
    chart: {
      type: 'packedbubble',
      height: '100%'
    },
    title: {
      text: 'Female Gross Enrollment Ratios by Region (2014) - Tertiary'
    },
    tooltip: {
      useHTML: true,
      pointFormat: '<b>{point.name}:</b> {point.value}%'
    },
    plotOptions: {
      packedbubble: {
        minSize: '10%',
        maxSize: '100%',
        zMin: 0,
        zMax: 400,
        layoutAlgorithm: {
          gravitationalConstant: 0.05,
          splitSeries: true,
          seriesInteraction: false,
          dragBetweenSeries: true,
          parentNodeLimit: true
        },
        dataLabels: {
          enabled: true,
          format: '{point.name}',
          style: {
            color: 'black',
            textOutline: 'none',
            fontWeight: 'normal'
          }
        }
      }
    },
    series: tertiarySeriesData.map((series, index) => ({
     ...series,
      color: hex_colors[index % hex_colors.length]
    }))
  });
}
```

::: {.panel-tabset}

## Primary
```{ojs}
// Render the charts
renderPrimaryChart()
```

<div id="primary-container"></div>


## Secondary
```{ojs}
// Render the charts
renderSecondaryChart();
```

<div id="secondary-container"></div>

## Third

<div id="tertiary-container"></div>

```{ojs}
// Render the charts
renderTertiaryChart();
```

:::