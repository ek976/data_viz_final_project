[
  {
    "objectID": "report/report.html",
    "href": "report/report.html",
    "title": "Global study of Gender Inequality in Education Access",
    "section": "",
    "text": "Abstract\nIn this article we aim to explore gender inequality in education access across the globe. Education is one of the key drivers in the development of society. For that reason, we will be using data obrained from the World Bank to analyze the relationship between this gap and other factors such as GDP, GNI, population, and other variables. The data is utilized is from the years 2010, 2011, 2012, 2013, and 2014. We will focuss on a larger global scale and then dive down into specific regions in order to identify trends and patterns that are important to explore further through our analysis. Additionally, we will be looking at what regions have the highest diparity in education enrollment based on gender and what factors may be contributing to this disparity, whether they are economic, social, or political.\n\n\nIntroduction\nEducation is one of the most important factors in the development of society. Throughout all history, women have been marginalized in the educational system. This has led to a significant gap in the education. The United Nations has recognized this issue and has emphasized the importance of education in the sustainable development of society. While this gender gap has been closing over the years, we will aim to explore the current state of this gap and what are the factors that may be contributing to it so that we can better understand how to address this issue.\nTo do this, we will not only take into account factors like global development or macroeconomics but we will try to dive deeper into gender roles in society. We will address six critical questions:\n\nHow do literacy rates correlate with population growth rates across different regions and time periods?\nHow does the allocation of resources to education influence literacy rates?\nIn what ways do literacy and education contribute to economic growth and development?\nTo what extent does gender equality manifest in educational access, participation, and outcomes?\nHow do trends in education mirror trends in employment, particularly regarding gender?\nWhat specific obstacles hinder gender equality in educational access, retention, and achievement?\n\nBy answering the above, we will be able to find out the importance of education in the development of countries and population, the influence it has within the working industry, what role economics plays in education, and explore further issues in the current gender gap. Hopefully, this study will help us better understand this gap and how to address it in the future.\n\n\nFemale Gross Enrollment Ratios by Region (2014)\nTo begin our analysis, we will be looking at different regions usually studied by global organizations like the World Bank. We will be focusing on the following regions: Arab World, East Asia & Pacific, Euro area, Europe & Central Asia, Heavily indebted poor countries (HIPC), Latin America & Caribbean (excluding high income), Middle East & North Africa, Middle East & North Africa (excluding high income), OECD members, and Sub-Saharan Africa (excluding high income). The objective is to visualize the differences in womenâ€™s enrollment at different education levels across the world at a global scale and identify any trends or patterns that may arise. This will also allow us to consider if some regions are worth exploring in more detail than others in our analysis.\n\n\n\n\n\n\n\n\ninitialData = [\n  {\"Country Name\":\"Arab World\",\"Indicator\":\"lower secondary\",\"Value\":81.054},\n  {\"Country Name\":\"Arab World\",\"Indicator\":\"post-secondary non-tertiary\",\"Value\":\"NA\"},\n  {\"Country Name\":\"Arab World\",\"Indicator\":\"pre-primary\",\"Value\":25.3707},\n  {\"Country Name\":\"Arab World\",\"Indicator\":\"primary\",\"Value\":93.608},\n  {\"Country Name\":\"Arab World\",\"Indicator\":\"secondary\",\"Value\":67.9689},\n  {\"Country Name\":\"Arab World\",\"Indicator\":\"tertiary\",\"Value\":28.768},\n  {\"Country Name\":\"Arab World\",\"Indicator\":\"upper secondary\",\"Value\":54.5065},\n  {\"Country Name\":\"East Asia & Pacific\",\"Indicator\":\"lower secondary\",\"Value\":96.6641},\n  {\"Country Name\":\"East Asia & Pacific\",\"Indicator\":\"post-secondary non-tertiary\",\"Value\":\"NA\"},\n  {\"Country Name\":\"East Asia & Pacific\",\"Indicator\":\"pre-primary\",\"Value\":76.0034},\n  {\"Country Name\":\"East Asia & Pacific\",\"Indicator\":\"primary\",\"Value\":104.9668},\n  {\"Country Name\":\"East Asia & Pacific\",\"Indicator\":\"secondary\",\"Value\":88.3206},\n  {\"Country Name\":\"East Asia & Pacific\",\"Indicator\":\"tertiary\",\"Value\":41.4262},\n  {\"Country Name\":\"East Asia & Pacific\",\"Indicator\":\"upper secondary\",\"Value\":79.7367},\n  {\"Country Name\":\"Euro area\",\"Indicator\":\"lower secondary\",\"Value\":108.7706},\n  {\"Country Name\":\"Euro area\",\"Indicator\":\"post-secondary non-tertiary\",\"Value\":\"NA\"},\n  {\"Country Name\":\"Euro area\",\"Indicator\":\"pre-primary\",\"Value\":102.3132},\n  {\"Country Name\":\"Euro area\",\"Indicator\":\"primary\",\"Value\":103.4798},\n  {\"Country Name\":\"Euro area\",\"Indicator\":\"secondary\",\"Value\":110.7075},\n  {\"Country Name\":\"Euro area\",\"Indicator\":\"tertiary\",\"Value\":76.299},\n  {\"Country Name\":\"Euro area\",\"Indicator\":\"upper secondary\",\"Value\":112.9169},\n  {\"Country Name\":\"Europe & Central Asia\",\"Indicator\":\"lower secondary\",\"Value\":103.7713},\n  {\"Country Name\":\"Europe & Central Asia\",\"Indicator\":\"post-secondary non-tertiary\",\"Value\":\"NA\"},\n  {\"Country Name\":\"Europe & Central Asia\",\"Indicator\":\"pre-primary\",\"Value\":74.2163},\n  {\"Country Name\":\"Europe & Central Asia\",\"Indicator\":\"primary\",\"Value\":103.1583},\n  {\"Country Name\":\"Europe & Central Asia\",\"Indicator\":\"secondary\",\"Value\":105.389},\n  {\"Country Name\":\"Europe & Central Asia\",\"Indicator\":\"tertiary\",\"Value\":69.8713},\n  {\"Country Name\":\"Europe & Central Asia\",\"Indicator\":\"upper secondary\",\"Value\":107.4027},\n  {\"Country Name\":\"Heavily indebted poor countries (HIPC)\",\"Indicator\":\"lower secondary\",\"Value\":\"NA\"},\n  {\"Country Name\":\"Heavily indebted poor countries (HIPC)\",\"Indicator\":\"post-secondary non-tertiary\",\"Value\":18.0427},\n  {\"Country Name\":\"Heavily indebted poor countries (HIPC)\",\"Indicator\":\"pre-primary\",\"Value\":98.0805},\n  {\"Country Name\":\"Heavily indebted poor countries (HIPC)\",\"Indicator\":\"primary\",\"Value\":35.621},\n  {\"Country Name\":\"Heavily indebted poor countries (HIPC)\",\"Indicator\":\"secondary\",\"Value\":6.233},\n  {\"Country Name\":\"Heavily indebted poor countries (HIPC)\",\"Indicator\":\"tertiary\",\"Value\":24.4659},\n  {\"Country Name\":\"Heavily indebted poor countries (HIPC)\",\"Indicator\":\"upper secondary\",\"Value\":108.0586},\n  {\"Country Name\":\"Latin America & Caribbean (excluding high income)\",\"Indicator\":\"lower secondary\",\"Value\":\"NA\"},\n  {\"Country Name\":\"Latin America & Caribbean(excluding high income)\",\"Indicator\":\"post-secondary non-tertiary\",\"Value\":72.4493},\n  {\"Country Name\":\"Latin America & Caribbean (excluding high income)\",\"Indicator\":\"pre-primary\",\"Value\":107.3809},\n  {\"Country Name\":\"Latin America & Caribbean (excluding high income)\",\"Indicator\":\"primary\",\"Value\":97.1722},\n  {\"Country Name\":\"Latin America & Caribbean (excluding high income)\",\"Indicator\":\"secondary\",\"Value\":48.967},\n  {\"Country Name\":\"Latin America & Caribbean (excluding high income)\",\"Indicator\":\"tertiary\",\"Value\":84.4792},\n  {\"Country Name\":\"Latin America & Caribbean (excluding high income)\",\"Indicator\":\"upper secondary\",\"Value\":88.4424},\n  {\"Country Name\":\"Middle East & North Africa\",\"Indicator\":\"lower secondary\",\"Value\":\"NA\"},\n  {\"Country Name\":\"Middle East & North Africa\",\"Indicator\":\"post-secondary non-tertiary\",\"Value\":29.5462},\n  {\"Country Name\":\"Middle East & North Africa\",\"Indicator\":\"pre-primary\",\"Value\":103.047},\n  {\"Country Name\":\"Middle East & North Africa\",\"Indicator\":\"primary\",\"Value\":76.9069},\n  {\"Country Name\":\"Middle East & North Africa\",\"Indicator\":\"secondary\",\"Value\":38.2514},\n  {\"Country Name\":\"Middle East & North Africa\",\"Indicator\":\"tertiary\",\"Value\":65.6759},\n  {\"Country Name\":\"Middle East & North Africa\",\"Indicator\":\"upper secondary\",\"Value\":86.992},\n  {\"Country Name\":\"Middle East & North Africa (excluding high income)\",\"Indicator\":\"lower secondary\",\"Value\":\"NA\"},\n  {\"Country Name\":\"Middle East & North Africa (excluding high income)\",\"Indicator\":\"post-secondary non-tertiary\",\"Value\":26.8679},\n  {\"Country Name\":\"Middle East & North Africa (excluding high income)\",\"Indicator\":\"pre-primary\",\"Value\":102.4904},\n  {\"Country Name\":\"Middle East & North Africa (excluding high income)\",\"Indicator\":\"primary\",\"Value\":74.3971},\n  {\"Country Name\":\"Middle East & North Africa (excluding high income)\",\"Indicator\":\"secondary\",\"Value\":36.1012},\n  {\"Country Name\":\"Middle East & North Africa (excluding high income)\",\"Indicator\":\"tertiary\",\"Value\":62.3747},\n  {\"Country Name\":\"Middle East & North Africa (excluding high income)\",\"Indicator\":\"upper secondary\",\"Value\":107.3207},\n  {\"Country Name\":\"OECD members\",\"Indicator\":\"lower secondary\",\"Value\":79.3329},\n  {\"Country Name\":\"OECD members\",\"Indicator\":\"post-secondary non-tertiary\",\"Value\":\"NA\"},\n  {\"Country Name\":\"OECD members\",\"Indicator\":\"pre-primary\",\"Value\":102.2592},\n  {\"Country Name\":\"OECD members\",\"Indicator\":\"primary\",\"Value\":104.3177},\n  {\"Country Name\":\"OECD members\",\"Indicator\":\"secondary\",\"Value\":75.5335},\n  {\"Country Name\":\"OECD members\",\"Indicator\":\"tertiary\",\"Value\":101.3419},\n  {\"Country Name\":\"OECD members\",\"Indicator\":\"upper secondary\",\"Value\":46.1386},\n  {\"Country Name\":\"Sub-Saharan Africa (excluding high income)\",\"Indicator\":\"lower secondary\",\"Value\":\"NA\"},\n  {\"Country Name\":\"Sub-Saharan Africa (excluding high income)\",\"Indicator\":\"post-secondary non-tertiary\",\"Value\":22.0271},\n  {\"Country Name\":\"Sub-Saharan Africa (excluding high income)\",\"Indicator\":\"pre-primary\",\"Value\":94.7689},\n  {\"Country Name\":\"Sub-Saharan Africa (excluding high income)\",\"Indicator\":\"primary\",\"Value\":39.5373},\n  {\"Country Name\":\"Sub-Saharan Africa (excluding high income)\",\"Indicator\":\"secondary\",\"Value\":7.2426},\n  {\"Country Name\":\"Sub-Saharan Africa (excluding high income)\",\"Indicator\":\"tertiary\",\"Value\":31.7493},\n  {\"Country Name\":\"Sub-Saharan Africa (excluding high income)\",\"Indicator\":\"upper secondary\",\"Value\":108.0586}\n];\n\n// Filter and parse the dataset to remove \"NA\" values and convert \"Value\" to float\nparsedData = initialData.filter(d =&gt; d.Value !== \"NA\").map(d =&gt; ({\n  ...d,\n  Value: parseFloat(d.Value)\n}));\n\n// Reduce the data to group it by \"Country Name\" and accumulate the indicators and values\nseriesData = parsedData.reduce((acc, { \"Country Name\": countryName, Indicator, Value }) =&gt; {\n  let group = acc.find(g =&gt; g.name === countryName);\n  if (!group) {\n    group = { name: countryName, data: [] };\n    acc.push(group);\n  }\n  group.data.push({ name: Indicator, value: Value });\n  return acc;\n}, []);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis chart shows the Female Gross Enrollment Ratios by Region for the year 2014. These region delimitations have been chosen from what global organizations like the World Bank utilize for their studies. You can select and deselect regions to focus on different regions, each bubble inside the region represents an education level, and the values inside are the female gross enrollment ration for 2014. The sizes of the bubbles correlate to the values. If levels of education are not present in a region is due to the lack of information about that specific combination of education level and region.\n\n\n\nfunction renderChart() {\n    Highcharts.chart('container', {\n        chart: {\n            type: 'packedbubble',\n            height: '100%'\n        },\n        title: {\n            text: 'Female Gross Enrollment Ratios by Region (2014)'\n        },\n        tooltip: {\n            useHTML: true,\n            pointFormat: '&lt;b&gt;{point.name}:&lt;/b&gt; {point.value}%'\n        },\n        plotOptions: {\n            packedbubble: {\n                minSize: '10%',\n                maxSize: '100%',\n                zMin: 0,\n                zMax: 400,\n                layoutAlgorithm: {\n                    gravitationalConstant: 0.05,\n                    splitSeries: true,\n                    seriesInteraction: false,\n                    dragBetweenSeries: true,\n                    parentNodeLimit: true\n                },\n                dataLabels: {\n                    enabled: true,\n                    format: '{point.name}',\n                    style: {\n                        color: 'black',\n                        textOutline: 'none',\n                        fontWeight: 'normal'\n                    }\n                }\n            }\n        },\n        series: seriesData\n    })};\nrenderChart();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrom the chart above, not surprisingly, we can see that for all regions, the higher the education level, the lower the enrollment ratio. This is expected as the higher the education level, the more specialized and less accessible it becomes. However, we can see that there are some regions that have higher enrollment ratios than others. While looking at every regions data is important, it is worth noting that for some of them there is a lack of information for some education levels. This limits our ability to make a full comparison between regions. However, it still allows us to see the disparities between regions. Subsahaaran Africa, heavily indebted poor countries, and the Middle East and North Africa seem to have the lowest enrollment ratios across all education levels for female students. On the other hand, the Euro area, Europe and Central Asia, and OECD members have the highest enrollment ratios for female students.\nThis is important information to consider as we move forward with our analysis. One can think that it may be due to economic reasons, social and ideological reasons, or even political reasons. However, this problem has been present for decades and instead of taking assumptions to answer this question, we should identify the key reasons for this disparity and address it accordingly."
  },
  {
    "objectID": "map/map.html",
    "href": "map/map.html",
    "title": "Cleaning to only countries in â€˜Country Nameâ€™",
    "section": "",
    "text": "# libraries \nimport pandas as pd\nimport numpy as np\nimport re\nimport plotly.graph_objects as go\nimport geopandas as gpd\nimport plotly.express as px\nimport matplotlib.pyplot as plt\nimport folium\n\n\n# read in data \ndf = pd.read_csv(\"../cleaned_data/filtered_education_data.csv\")\ndf.head() \n\n\n\n\n\n\n\n\n\nCountry Name\nCountry Code\nIndicator Name\n2010\n2011\n2012\n2013\n2014\n\n\n\n\n0\nArab World\nARB\nGDP per capita (current US$)\n6.032962e+03\n7.005480e+03\n7.571402e+03\n7.715999e+03\nNaN\n\n\n1\nArab World\nARB\nGDP, PPP (current international $)\n5.022945e+12\n5.265230e+12\n5.696577e+12\n5.935614e+12\nNaN\n\n\n2\nArab World\nARB\nGNI (current US$)\n2.072484e+12\n2.515669e+12\n2.755869e+12\n2.846448e+12\nNaN\n\n\n3\nArab World\nARB\nGNI per capita, Atlas method (current US$)\n5.913745e+03\n6.305644e+03\n7.196533e+03\nNaN\nNaN\n\n\n4\nArab World\nARB\nGNI per capita, PPP (current international $)\n1.428402e+04\n1.499616e+04\n1.584650e+04\n1.614156e+04\nNaN\n\n\n\n\n\n\n\n\n\nprint(\"Column Titles\")\nprint(df.columns)\n\nColumn Titles\nIndex(['Country Name', 'Country Code', 'Indicator Name', '2010', '2011',\n       '2012', '2013', '2014'],\n      dtype='object')\n\n\n\n# info\ndf.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 7260 entries, 0 to 7259\nData columns (total 8 columns):\n #   Column          Non-Null Count  Dtype  \n---  ------          --------------  -----  \n 0   Country Name    7260 non-null   object \n 1   Country Code    7260 non-null   object \n 2   Indicator Name  7260 non-null   object \n 3   2010            4632 non-null   float64\n 4   2011            4743 non-null   float64\n 5   2012            4582 non-null   float64\n 6   2013            4396 non-null   float64\n 7   2014            4164 non-null   float64\ndtypes: float64(5), object(3)\nmemory usage: 453.9+ KB\n\n\n\n# missing value imputation \ndf.isna().sum()\n\nCountry Name         0\nCountry Code         0\nIndicator Name       0\n2010              2628\n2011              2517\n2012              2678\n2013              2864\n2014              3096\ndtype: int64\n\n\n\nCleaning to only countries in â€˜Country Nameâ€™\n\n# Print unique values in the 'Column Titles' column\nunique_column_titles = df['Country Name'].unique()\n\nprint(\"Unique Column Titles:\")\nfor title in unique_column_titles:\n    print(title)\n\nUnique Column Titles:\nArab World\nEast Asia & Pacific\nEast Asia & Pacific (excluding high income)\nEuro area\nEurope & Central Asia\nEurope & Central Asia (excluding high income)\nEuropean Union\nHeavily indebted poor countries (HIPC)\nHigh income\nLatin America & Caribbean\nLatin America & Caribbean (excluding high income)\nLeast developed countries: UN classification\nLow & middle income\nLow income\nLower middle income\nMiddle East & North Africa\nMiddle East & North Africa (excluding high income)\nMiddle income\nNorth America\nOECD members\nSouth Asia\nSub-Saharan Africa\nSub-Saharan Africa (excluding high income)\nUpper middle income\nWorld\nAfghanistan\nAlbania\nAlgeria\nAmerican Samoa\nAndorra\nAngola\nAntigua and Barbuda\nArgentina\nArmenia\nAruba\nAustralia\nAustria\nAzerbaijan\nBahamas, The\nBahrain\nBangladesh\nBarbados\nBelarus\nBelgium\nBelize\nBenin\nBermuda\nBhutan\nBolivia\nBosnia and Herzegovina\nBotswana\nBrazil\nBritish Virgin Islands\nBrunei Darussalam\nBulgaria\nBurkina Faso\nBurundi\nCabo Verde\nCambodia\nCameroon\nCanada\nCayman Islands\nCentral African Republic\nChad\nChannel Islands\nChile\nChina\nColombia\nComoros\nCongo, Dem. Rep.\nCongo, Rep.\nCosta Rica\nCote d'Ivoire\nCroatia\nCuba\nCuracao\nCyprus\nCzech Republic\nDenmark\nDjibouti\nDominica\nDominican Republic\nEcuador\nEgypt, Arab Rep.\nEl Salvador\nEquatorial Guinea\nEritrea\nEstonia\nEthiopia\nFaroe Islands\nFiji\nFinland\nFrance\nFrench Polynesia\nGabon\nGambia, The\nGeorgia\nGermany\nGhana\nGibraltar\nGreece\nGreenland\nGrenada\nGuam\nGuatemala\nGuinea\nGuinea-Bissau\nGuyana\nHaiti\nHonduras\nHong Kong SAR, China\nHungary\nIceland\nIndia\nIndonesia\nIran, Islamic Rep.\nIraq\nIreland\nIsle of Man\nIsrael\nItaly\nJamaica\nJapan\nJordan\nKazakhstan\nKenya\nKiribati\nKorea, Dem. Peopleâ€™s Rep.\nKorea, Rep.\nKosovo\nKuwait\nKyrgyz Republic\nLao PDR\nLatvia\nLebanon\nLesotho\nLiberia\nLibya\nLiechtenstein\nLithuania\nLuxembourg\nMacao SAR, China\nMacedonia, FYR\nMadagascar\nMalawi\nMalaysia\nMaldives\nMali\nMalta\nMarshall Islands\nMauritania\nMauritius\nMexico\nMicronesia, Fed. Sts.\nMoldova\nMonaco\nMongolia\nMontenegro\nMorocco\nMozambique\nMyanmar\nNamibia\nNauru\nNepal\nNetherlands\nNew Caledonia\nNew Zealand\nNicaragua\nNiger\nNigeria\nNorthern Mariana Islands\nNorway\nOman\nPakistan\nPalau\nPanama\nPapua New Guinea\nParaguay\nPeru\nPhilippines\nPoland\nPortugal\nPuerto Rico\nQatar\nRomania\nRussian Federation\nRwanda\nSamoa\nSan Marino\nSao Tome and Principe\nSaudi Arabia\nSenegal\nSerbia\nSeychelles\nSierra Leone\nSingapore\nSint Maarten (Dutch part)\nSlovak Republic\nSlovenia\nSolomon Islands\nSomalia\nSouth Africa\nSouth Sudan\nSpain\nSri Lanka\nSt. Kitts and Nevis\nSt. Lucia\nSt. Martin (French part)\nSt. Vincent and the Grenadines\nSudan\nSuriname\nSwaziland\nSweden\nSwitzerland\nSyrian Arab Republic\nTajikistan\nTanzania\nThailand\nTimor-Leste\nTogo\nTonga\nTrinidad and Tobago\nTunisia\nTurkey\nTurkmenistan\nTurks and Caicos Islands\nTuvalu\nUganda\nUkraine\nUnited Arab Emirates\nUnited Kingdom\nUnited States\nUruguay\nUzbekistan\nVanuatu\nVenezuela, RB\nVietnam\nVirgin Islands (U.S.)\nWest Bank and Gaza\nYemen, Rep.\nZambia\nZimbabwe\n\n\n\n# cleaning to only country names \n# List of values to drop\nvalues_to_drop = [\n    'Arab World',\n    'East Asia & Pacific',\n    'East Asia & Pacific (excluding high income)',\n    'Euro area',\n    'Europe & Central Asia',\n    'Europe & Central Asia (excluding high income)',\n    'European Union',\n    'Heavily indebted poor countries (HIPC)',\n    'High income',\n    'Latin America & Caribbean',\n    'Latin America & Caribbean (excluding high income)',\n    'Least developed countries: UN classification',\n    'Low & middle income',\n    'Low income',\n    'Lower middle income',\n    'Middle East & North Africa',\n    'Middle East & North Africa (excluding high income)',\n    'Middle income',\n    'North America',\n    'OECD members',\n    'South Asia',\n    'Sub-Saharan Africa',\n    'Sub-Saharan Africa (excluding high income)',\n    'Upper middle income',\n    'World'\n]\n\n# Drop rows containing the values to drop\ndf = df[~df['Country Name'].isin(values_to_drop)]\n\n# Reset index after dropping rows\ndf.reset_index(drop=True, inplace=True)\n\n# Print the DataFrame after dropping rows\nprint(df.head())\n\n  Country Name Country Code                                 Indicator Name  \\\n0  Afghanistan          AFG                   GDP per capita (current US$)   \n1  Afghanistan          AFG             GDP, PPP (current international $)   \n2  Afghanistan          AFG                              GNI (current US$)   \n3  Afghanistan          AFG     GNI per capita, Atlas method (current US$)   \n4  Afghanistan          AFG  GNI per capita, PPP (current international $)   \n\n           2010          2011          2012          2013          2014  \n0  5.533003e+02  6.035370e+02  6.690091e+02  6.317450e+02  6.120697e+02  \n1  4.555511e+10  4.933825e+10  5.750013e+10  5.957345e+10  6.143594e+10  \n2  1.599880e+10  1.813032e+10  2.084867e+10  2.033724e+10  2.023030e+10  \n3  5.000000e+02  5.600000e+02  6.700000e+02  6.700000e+02  6.300000e+02  \n4  1.590000e+03  1.680000e+03  1.900000e+03  1.900000e+03  1.890000e+03  \n\n\n\n\nSubsetting df to include GDP and Country\n\n# Filter the DataFrame to include only rows where 'Indicator Name' matches 'GDP per capita (current US$)'\ngdp_per_capita_df = df[df['Indicator Name'] == 'GDP per capita (current US$)']\n\n# Display the first few rows of the filtered DataFrame\nprint(gdp_per_capita_df.head())\n\n# Now try accessing the 'GDP per capita (current US$)' column from the filtered DataFrame\ngdp_per_capita_column = gdp_per_capita_df['2010']\nprint(gdp_per_capita_column.head())\n\n       Country Name Country Code                Indicator Name          2010  \\\n0       Afghanistan          AFG  GDP per capita (current US$)    553.300289   \n30          Albania          ALB  GDP per capita (current US$)   4094.358832   \n60          Algeria          DZA  GDP per capita (current US$)   4463.394675   \n90   American Samoa          ASM  GDP per capita (current US$)  10352.822762   \n120         Andorra          AND  GDP per capita (current US$)  39736.354063   \n\n             2011          2012          2013          2014  \n0      603.537023    669.009051    631.744971    612.069651  \n30    4437.178068   4247.614308   4413.081697   4578.666728  \n60    5432.413320   5565.134521   5471.123389   5466.425778  \n90   10375.994215  11660.329531  11589.853002  11598.751736  \n120  41098.766942  38391.080867  40619.711298  42294.994727  \n0        553.300289\n30      4094.358832\n60      4463.394675\n90     10352.822762\n120    39736.354063\nName: 2010, dtype: float64\n\n\n\n# checking for NA values \n# Check if Russia is in the DataFrame\nrussia_data = gdp_per_capita_df[gdp_per_capita_df['Country Name'] == 'Russia']\nprint(\"Russia data:\")\nprint(russia_data)\n\n# Check if United States is in the DataFrame\nus_data = gdp_per_capita_df[gdp_per_capita_df['Country Name'] == 'United States']\nprint(\"\\nUnited States data:\")\nprint(us_data)\n\nRussia data:\nEmpty DataFrame\nColumns: [Country Name, Country Code, Indicator Name, 2010, 2011, 2012, 2013, 2014]\nIndex: []\n\nUnited States data:\n       Country Name Country Code                Indicator Name          2010  \\\n6180  United States          USA  GDP per capita (current US$)  48373.878816   \n\n              2011          2012          2013          2014  \n6180  49790.665478  51450.122295  52787.026949  54598.550689  \n\n\n\n# Update country name in the DataFrame\ngdp_per_capita_df['Country Name'].replace({'United States': 'United States of America'}, inplace=True)\n# Russia \ngdp_per_capita_df['Country Name'].replace({'Russian Federation': 'Russia'}, inplace=True)\n\n\n/var/folders/dt/dqsy5q5s0yjbqldcj0ghd9fr0000gt/T/ipykernel_59737/795809972.py:2: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  gdp_per_capita_df['Country Name'].replace({'United States': 'United States of America'}, inplace=True)\n/var/folders/dt/dqsy5q5s0yjbqldcj0ghd9fr0000gt/T/ipykernel_59737/795809972.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  gdp_per_capita_df['Country Name'].replace({'Russian Federation': 'Russia'}, inplace=True)\n\n\n\n#checking GDP as the map is sus \nus_gdp_2014 = gdp_per_capita_df.loc[gdp_per_capita_df['Country Name'] == 'United States of America', '2014'].values[0]\nprint(\"GDP per capita for the United States in 2014:\", us_gdp_2014)\n\nGDP per capita for the United States in 2014: 54598.5506887519\n\n\n\nimport folium\n\n# Load the GeoJSON file for world countries\nworld_geojson_file = \"../data/map_data/world-countries.json\"\n\n# Define the maximum bounds for the map to prevent repeating\nmax_bounds = [[-90, -180], [90, 180]]\n\n# Create a Folium map with max_bounds\nworld_map = folium.Map(location=[0, 0], zoom_start=2, min_zoom=2, max_bounds=True)\n\n# # Create a Folium map centered at a certain latitude and longitude\n# world_map = folium.Map(location=[0, 0], zoom_start=2, min_zoom=2)\n\n# Add the choropleth layer for GDP per capita\nfolium.Choropleth(\n    geo_data=world_geojson_file,\n    name='choropleth',\n    data=gdp_per_capita_df,\n    columns=['Country Name', '2014'],  # changing out per year \n    key_on='feature.properties.name',\n    fill_color='YlGnBu',  # You can change the color scheme here\n    fill_opacity=0.7,\n    line_opacity=0.2,\n    legend_name='GDP per Capita (USD)'\n).add_to(world_map)\n\n# Display the map\nworld_map\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  }
]