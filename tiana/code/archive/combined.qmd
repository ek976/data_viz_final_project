---
format: dashboard
---
 
## Row

```{python}

#| label: fig-main
#| fig-cap: "Female Literacy vs. GDP"
#| column: page-left


import pandas as pd
import numpy as np
import hvplot.pandas
import holoviews as hv
import panel as pn
from bokeh.sampledata.iris import flowers
from bokeh.resources import INLINE

df = pd.read_csv('../data/tidy_data.csv')

plot_df = df[(df['Series Name']=="GDP per capita (constant 2010 US$)") | (df['Series Name']=="Literacy rate, adult total (% of people ages 15 and above)") 
             | (df['Series Name']=="Literacy rate, adult male (% of males ages 15 and above)") 
             | (df['Series Name']=="Literacy rate, adult female (% of females ages 15 and above)")]

plot_df = plot_df[plot_df['Year']==2021]
plot_df = plot_df.drop(columns=['Country Code', 'Year'])

pivot_df = plot_df.pivot(index='Country Name', columns='Series Name', values='Value')
pivot_df = pivot_df.dropna()

hv.extension('bokeh')
# Scatter plot: GDP vs. female literacy
scatter = hv.Scatter(pivot_df, 
                     'Literacy rate, adult female (% of females ages 15 and above)', 
                     'GDP per capita (constant 2010 US$)', 
                     label='GDP vs. Female Literacy').opts(width=800, color="#3d6469")

# change font
scatter = scatter.opts(fontsize={'title': '20pt', 'labels': '12pt'}, size=7)

# bar plot: female literacy by country
bar = hv.Bars(pivot_df, 
              'Country Name', 
              'Literacy rate, adult female (% of females ages 15 and above)', 
              label='Female Literacy by Country').opts(width=800, color="#3d6469")

# change font
bar = bar.opts(fontsize={'title': '14pt', 'labels': '12pt'})

# Rotate x-axis labels by 45 degrees
bar = bar.opts(xrotation=45)

# Define a linking function to update bar plot based on scatter plot selection
def update_bar_plot(index):
    if index:
        selected_countries = pivot_df.iloc[index]['Country Name']
        selected_data = pivot_df[pivot_df['Country Name'].isin(selected_countries)]
        return hv.Bars(selected_data, 
                       'Country Name', 
                       'Literacy rate, adult female (% of females ages 15 and above)', 
                       label='Female Literacy by Country').opts(width=800, height=600, color="#3d6469").opts(xrotation=45)
    else:
        return hv.Bars(pivot_df, 
                       'Country Name', 
                       'Literacy rate, adult female (% of females ages 15 and above)', 
                       label='Female Literacy by Country').opts(width=800, height=600, color="#3d6469").opts(xrotation=45)



# Define a DynamicMap to link the plots
linked_bar = hv.DynamicMap(update_bar_plot, streams=[hv.streams.Selection1D(source=scatter)])

# change font
linked_bar = linked_bar.opts(fontsize={'title': '20pt', 'labels': '12pt'})

# Arrange plots in a column layout with scatter plot on top, bar plot below
layout = pn.Column(scatter, linked_bar)


# Display the layout using Panel
layout.servable()
```


## Row {.tabset}

```{python}

#Testing testing


```

